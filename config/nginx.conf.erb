daemon off;
# Heroku dynos have at least 4 cores.
worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

events {
  use epoll;
  accept_mutex on;
  worker_connections <%= ENV['NGINX_WORKER_CONNECTIONS'] || 1024 %>;
}

http {
  gzip on;
  gzip_comp_level 2;
  gzip_min_length 512;

  server_tokens off;

  log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id';
  access_log <%= ENV['NGINX_ACCESS_LOG_PATH'] || 'logs/nginx/access.log' %> l2met;
  error_log <%= ENV['NGINX_ERROR_LOG_PATH'] || 'logs/nginx/error.log' %>;


  include mime.types;
  default_type application/octet-stream;
  sendfile on;

  # Must read the body in 5 seconds.
  client_body_timeout <%= ENV['NGINX_CLIENT_BODY_TIMEOUT'] || 5 %>;


  upstream backend {
    zone backend 64k;
    server cors-f.herokuapp.com:443 max_fails=3 fail_timeout=30s;
    server cors-f1.herokuapp.com:443 max_fails=3 fail_timeout=30s;
    server cors-f2.herokuapp.com:443 backup;
  }

  server {
    listen 80;
    listen 443 ssl;
    server_name cors-anywhere-nginx.herokuapp.com;
    keepalive_timeout 5;
    if ($scheme != https) { 
        rewrite ^(.*)$  https://$host$1 permanent; 
    }
    location / {
	    proxy_pass https://backend;
    }
  }
}