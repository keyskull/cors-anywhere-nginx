daemon off;
# Heroku dynos have at least 4 cores
worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

events {
    use epoll;
    accept_mutex on;
    worker_connections <%= ENV['NGINX_WORKER_CONNECTIONS'] || 1024 %>;
}

stream {
    gzip on;
    gzip_comp_level 2;
    gzip_min_length 512;
    server_tokens off;

    
    log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id';
    access_log <%= ENV['NGINX_ACCESS_LOG_PATH'] || 'logs/nginx/access.log' %> l2met;
    error_log <%= ENV['NGINX_ERROR_LOG_PATH'] || 'logs/nginx/error.log' %>;

    log_not_found on;


    # Must read the body in 5 seconds.
    client_body_timeout <%= ENV['NGINX_CLIENT_BODY_TIMEOUT'] || 5 %>;

    # handle SNI
    proxy_ssl_server_name on;
    # resolver needs to be set because we're using dynamic proxy_pass
    resolver 8.8.8.8;

    upstream backend {
      server cors-f.herokuapp.com max_fails=3 fail_timeout=30s;
      server cors-f1.herokuapp.com max_fails=3 fail_timeout=30s;
      server cors-f2.herokuapp.com backup;
    }

    upstream upstream_app_b {
        server app-b.herokuapp.com:443;
    }

    server {
        listen <%= ENV["PORT"] %>;
        
        ssl_preread on;
        proxy_pass backend;
        proxy_connect_timeout 15s;
        proxy_timeout 15s;
        proxy_next_upstream_timeout 15s;
  
    }
}